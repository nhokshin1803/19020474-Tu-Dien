import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.*;
import java.lang.reflect.Array;
import java.security.KeyFactory;
import java.util.Arrays;

import static javax.swing.JOptionPane.showMessageDialog;

public class DictionaryApplication extends JFrame {

    /**
     * Creates new form NewJPanel
     */
    public DictionaryApplication() throws FileNotFoundException {
        initComponents();
        setContentPane(applicationPanel);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setVisible(true);
        setResizable(false);
        setSize(800, 600);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() throws FileNotFoundException {
        applicationPanel = new JPanel();
        tFSearch = new JTextField();
        jScrollPane1 = new JScrollPane();
        Dictionaries = new JList<>();
        jScrollPane2 = new JScrollPane();
        dictionaryArea = new JTextArea();
        title = new JLabel();
        pronounceButton = new JButton();
        refreshButton = new JButton();
        searchButton = new JButton();
        addButton = new JButton();
        deleteButton = new JButton();
        fixButton = new JButton();
        jScrollPane3 = new JScrollPane();
        synonymsArea = new JTextArea();
        jLabel2 = new JLabel();
        historyButton = new JButton();
        jLabel3 = new JLabel();
        setPreferredSize(new java.awt.Dimension(400, 361));

        applicationPanel.setBackground(new java.awt.Color(255, 255, 255));
        applicationPanel.setBorder(BorderFactory.createLineBorder(Color.BLACK));

        tFSearch.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tFSearch.setText("");
        tFSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    tFSearchActionPerformed(evt);
                } catch (FileNotFoundException e) {
                    e.printStackTrace();
                }
            }
        });
        tFSearch.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
            }

            @Override
            public void keyPressed(KeyEvent e) {

            }

            @Override
            public void keyReleased(KeyEvent e) {
                String s = tFSearch.getText();
                String[] rec = new String[10000];
                int length = 0;
                int index = 0;
                for (int i = 0; i < Dictionary.count; ++i) {
                    if (Dictionary.word.get(i).word_target.contains(s)) {
                        if (!Dictionary.word.get(i).word_target.contains("(")) {
                            rec[length] = Dictionary.word.get(i).word_target;
                            ind[length] = i;
                            length++;
                            if (Dictionary.word.get(i).word_target == s) {
                                index = i;
                            }
                        }
                    }
                }
                DefaultListModel model = new DefaultListModel();
                for (int i = 0; i < rec.length; ++i) {
                    model.addElement(rec[i]);
                }
                Dictionaries.setModel(model);
                for (int i = 0; i < length; ++i) {
                    if (s.equals(rec[i])) {
                        String ss = Dictionary.word.get(ind[i]).word_type + "\n"
                                + Dictionary.word.get(ind[i]).word_pronounce + "\n"
                                + Dictionary.word.get(ind[i]).word_explain;
                        s = ss;
                        model.clear();
                    }
                }
                dictionaryArea.setText(s);
            }


        });
        DictionaryManagement.insertFromFile();
        for (int i = 0; i < Dictionary.count; ++i) {
            strings[i] = Dictionary.word.get(i).word_target;
        }
        Dictionaries.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Dictionaries.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent evt) {
                int i = Dictionaries.getSelectedIndex();
                if (i >= 0) {
                    String s = Dictionary.word.get(ind[i]).word_type + "\n" + Dictionary.word.get(ind[i]).word_pronounce + "\n" + Dictionary.word.get(ind[i]).word_explain;
                    tFSearch.setText(Dictionaries.getSelectedValue());
                    dictionaryArea.setText(s);

                }
            }
        });
        jScrollPane1.setViewportView(Dictionaries);
        dictionaryArea.setColumns(20);
        dictionaryArea.setLineWrap(true);
        dictionaryArea.setRows(5);
        dictionaryArea.setFont(new java.awt.Font("Tahoma", 3, 24));
        jScrollPane2.setViewportView(dictionaryArea);

        title.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        title.setForeground(new java.awt.Color(0, 51, 153));
        title.setHorizontalAlignment(SwingConstants.CENTER);
        title.setText("ENGLISH DICTIONARY");
        pronounceButton.setText("");
        pronounceButton.setBackground(Color.WHITE);
        pronounceButton.setIcon(new ImageIcon("E:\\19020474_Tudien\\src\\pronounce.jpg"));

        refreshButton.setText("Refresh");
        refreshButton.setBackground(Color.white);
        refreshButton.setIcon(new ImageIcon("E:\\19020474_Tudien\\src\\refresh.jpg"));
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });
        searchButton.setText("Search");
        searchButton.setBackground(Color.white);
        searchButton.setIcon(new ImageIcon("E:\\19020474_Tudien\\src\\search.jpg"));
        searchButton.setFont(new java.awt.Font("Times New Roman", 1, 16));
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        addButton.setIcon(new ImageIcon("E:\\19020474_Tudien\\src\\add.jpg"));
        addButton.setBackground(Color.white);
        addButton.setText("Add");
        addButton.setFont(new java.awt.Font("Times New Roman", 1, 16));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    addButtonActionPerformed(evt);
                } catch (FileNotFoundException e) {
                    e.printStackTrace();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });
        deleteButton.setText("Del");
        deleteButton.setIcon(new ImageIcon("E:\\19020474_Tudien\\src\\delete.jpg"));
        deleteButton.setBackground(Color.white);
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                    String temp = tFSearch.getText();
                    for(int i = 0;i < Dictionary.count;++i) {
                        if(Dictionary.word.get(i).word_target.equals(temp)) {
                            Dictionary.word.remove(i);
                        }
                    }
                    DictionaryManagement.exportToFile();
                    showMessageDialog(null,"Word Deleted!");
            }
        });

        fixButton.setText("Fix");
        fixButton.setBackground(Color.WHITE);
        synonymsArea.setColumns(20);
        synonymsArea.setRows(5);
        jScrollPane3.setViewportView(synonymsArea);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("SYNONYMS");

        historyButton.setBackground(Color.WHITE);
        historyButton.setText("History");


        GroupLayout applicationPanelLayout = new GroupLayout(applicationPanel);
        applicationPanel.setLayout(applicationPanelLayout);
        applicationPanelLayout.setHorizontalGroup(
                applicationPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(title, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(applicationPanelLayout.createSequentialGroup()
                                .addGroup(applicationPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(GroupLayout.Alignment.LEADING, applicationPanelLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(addButton)
                                                .addGap(26, 26, 26)
                                                .addComponent(deleteButton)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                                                .addComponent(fixButton))
                                        .addComponent(tFSearch, GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, GroupLayout.Alignment.LEADING)
                                        .addGroup(GroupLayout.Alignment.LEADING, applicationPanelLayout.createSequentialGroup()
                                                .addComponent(searchButton, GroupLayout.PREFERRED_SIZE, 110, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel3, GroupLayout.PREFERRED_SIZE, 49, GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(applicationPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(applicationPanelLayout.createSequentialGroup()
                                                .addGroup(applicationPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addGroup(applicationPanelLayout.createSequentialGroup()
                                                                .addComponent(pronounceButton, GroupLayout.PREFERRED_SIZE, 82, GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(refreshButton, GroupLayout.PREFERRED_SIZE, 110, GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(historyButton, GroupLayout.PREFERRED_SIZE, 85, GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 134, GroupLayout.PREFERRED_SIZE))
                                                .addGap(0, 249, Short.MAX_VALUE))
                                        .addGroup(GroupLayout.Alignment.TRAILING, applicationPanelLayout.createSequentialGroup()
                                                .addComponent(jScrollPane3)
                                                .addContainerGap())
                                        .addComponent(jScrollPane2)))
        );
        applicationPanelLayout.setVerticalGroup(
                applicationPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(applicationPanelLayout.createSequentialGroup()
                                .addComponent(title, GroupLayout.PREFERRED_SIZE, 26, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(applicationPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(searchButton, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(pronounceButton, GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                                        .addComponent(refreshButton, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(historyButton, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(applicationPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane2)
                                        .addGroup(applicationPanelLayout.createSequentialGroup()
                                                .addComponent(tFSearch, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 246, GroupLayout.PREFERRED_SIZE)))
                                .addGap(9, 9, 9)
                                .addComponent(jLabel2)
                                .addGroup(applicationPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(applicationPanelLayout.createSequentialGroup()
                                                .addGap(20, 20, 20)
                                                .addGroup(applicationPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                        .addComponent(addButton, GroupLayout.PREFERRED_SIZE, 43, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(deleteButton, GroupLayout.PREFERRED_SIZE, 43, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(fixButton, GroupLayout.PREFERRED_SIZE, 43, GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(applicationPanelLayout.createSequentialGroup()
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jScrollPane3, GroupLayout.PREFERRED_SIZE, 95, GroupLayout.PREFERRED_SIZE)))
                                .addGap(72, 72, 72))
        );

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(applicationPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(applicationPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
    }// </editor-fold>

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        tFSearch.requestFocus();
    }

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) throws IOException {
        String[] s = tFSearch.getText().split("\\s");
        Word w = new Word();
        w.word_target = s[0];
        w.word_type = s[1];
        w.word_pronounce = s[2];
        w.word_explain = s[3];
        int l = -1;
        int r = Dictionary.word.size();
        int o;
        while (r - l > 1) {
            o = (l + r) / 2;
            if (Dictionary.word.get(o).word_target.compareTo(s[0]) < 0) {
                l = o;
            } else {
                r = o;
            }
        }
        Dictionary.word.add(r,w);
        DictionaryManagement.exportToFile();
        showMessageDialog(null, "Add Success");


        // TODO add your handling code here:
    }

    private void tFSearchActionPerformed(java.awt.event.ActionEvent evt) throws FileNotFoundException {
        // TODO add your handling code here:
    }

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {
        tFSearch.setText(null);
        dictionaryArea.setText(null);
    }



    public static void main(String[] args) throws FileNotFoundException {
        new DictionaryApplication();
    }

    // Variables declaration - do not modify
    private JButton pronounceButton;
    private JButton refreshButton;
    private JButton searchButton;
    private JButton addButton;
    private JButton deleteButton;
    private JButton fixButton;
    private JButton historyButton;
    private JLabel title;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JList<String> Dictionaries;
    private JPanel applicationPanel;
    private JScrollPane jScrollPane1;
    private JScrollPane jScrollPane2;
    private JScrollPane jScrollPane3;
    private JTextArea dictionaryArea;
    private JTextArea synonymsArea;
    private JTextField tFSearch;
    String[] strings = new String[10000];
    int[] ind = new int[10000];
    // End of variables declaration
}
